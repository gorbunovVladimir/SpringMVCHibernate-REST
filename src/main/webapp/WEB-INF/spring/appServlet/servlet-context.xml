<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->
	<!-- DispatcherServlet Context: определяет настройки одного сервлета; бины, 
		которые доступны только ему -->		

	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- Разрешаем использование аннотаций Spring MVC (то есть @Controller и.т.д) -->
    <!-- <annotation-driven />	 -->
	
	<annotation-driven content-negotiation-manager="contentNegotiationManager" />
	<beans:bean id="contentNegotiationManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<beans:property name="favorPathExtension" value="true" />
		<beans:property name="favorParameter" value="true" />
		<beans:property name="mediaTypes">
			<beans:value>
				json=application/json
			</beans:value>
		</beans:property>
	</beans:bean>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<!-- Всю статику (изображения, css-файлы, javascript) положим в папку webapp/resources 
		и замаппим их на урл вида /resources/** -->		
	<resources mapping="/resources/**" location="/resources/" />

    <!-- Непосредственно бин dataSource -->
	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url"
			value="jdbc:mysql://localhost:3306/" />
		<beans:property name="username" value="gorbunov" />
		<beans:property name="password" value="123456" />
	</beans:bean>

	<!-- Hibernate 4 SessionFactory Bean definition -->
	<!-- Настройки фабрики сессий Хибернейта -->
	<beans:bean id="hibernate4AnnotatedSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
				</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	
	
	
	<!-- Inject the instance to hostDAO reference with adding sessionFactory -->
    <beans:bean id="hostDAO" class="com.gorbunov.spring.dao.HostDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<!-- Inject the instance to service reference with adding hostDao instance -->
    <beans:bean id="hostService" class="com.gorbunov.spring.service.HostServiceImpl">
		<beans:property name="hostDAO" ref="hostDAO"></beans:property>
	</beans:bean>
	
	<!-- Определяем папки, в которых будем автоматически искать бины-компоненты (@Component, @Service), веб компоненты (контроллеры)  -->
	<!--параметр, указывающий Spring'у, в каком пакете (и подпакетах, соответственно) искать свои аннотации.  -->
	<context:component-scan base-package="com.gorbunov.spring" />
	
	<!-- Настраивает управление транзакциями с помощью аннотации @Transactional -->
	<tx:annotation-driven transaction-manager="transactionManager"/>

	<!-- Менеджер транзакций -->	
	<beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>


</beans:beans>
